// <auto-generated />
using System;
using System.Collections.Generic;
using MeterSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeterSystem.Infrastructure.Migrations
{
    [DbContext(typeof(PostgreDbContext))]
    [Migration("20250321143357_user_entity")]
    partial class user_entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeterSystem.Domain.Entities.Consumption", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("CreatedAt", "Id");

                    b.HasIndex("ProductCode");

                    b.ToTable("Consumptions");
                });

            modelBuilder.Entity("MeterSystem.Domain.Entities.Product", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CreatedAt", "Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MeterSystem.Domain.Entities.User", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("Permissions")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("CreatedAt", "Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeterSystem.Domain.Entities.Consumption", b =>
                {
                    b.HasOne("MeterSystem.Domain.Entities.Product", "Product")
                        .WithMany("Consumptions")
                        .HasForeignKey("ProductCode")
                        .HasPrincipalKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MeterSystem.Domain.Entities.Product", b =>
                {
                    b.Navigation("Consumptions");
                });
#pragma warning restore 612, 618
        }
    }
}
